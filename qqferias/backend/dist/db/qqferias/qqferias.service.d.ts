import { Repository } from 'typeorm';
import { createAgendamentos } from './dto/create-agendamentos.dto';
import { createCompromissos } from './dto/create-compromissos.dto';
import { createFuncionarios } from './dto/create-funcionarios.dto';
import { createNotificacoes } from './dto/create-notificacoes.dto';
import { updateAgendamentos } from './dto/update-agendamentos.dto';
import { updateCompromissos } from './dto/update-compromissos.dto';
import { updateFuncionarios } from './dto/update-funcionarios.dto';
import { updateNotificacoes } from './dto/update-notificacoes.dto';
import { QQferiasAgendamentos } from './entity/qqferias.agendamentos';
import { QQferiasCompromissos } from './entity/qqferias.compromissos';
import { QQferiasFuncionarios } from './entity/qqferias.funcionarios';
import { QQferiasNotificacoes } from './entity/qqferias.notificacoes';
export declare class QqferiasService {
    private readonly agendamentosRepository;
    private readonly compromissosRepository;
    private readonly funcionariosRepository;
    private readonly notificacoesRepository;
    constructor(agendamentosRepository: Repository<QQferiasAgendamentos>, compromissosRepository: Repository<QQferiasCompromissos>, funcionariosRepository: Repository<QQferiasFuncionarios>, notificacoesRepository: Repository<QQferiasNotificacoes>);
    funcionariosFindAll(): Promise<QQferiasFuncionarios[]>;
    agendamentosFindAll(): Promise<QQferiasAgendamentos[]>;
    compromissosFindAll(): Promise<QQferiasCompromissos[]>;
    notificacoesFindAll(): Promise<QQferiasNotificacoes[]>;
    funcionariosFindOne(id: any): Promise<QQferiasFuncionarios>;
    agendamentosFindOne(id: any): Promise<QQferiasAgendamentos>;
    compromissosFindOne(id: any): Promise<QQferiasCompromissos>;
    notificacoesFindOne(id: any): Promise<QQferiasNotificacoes>;
    agendamentosCreate(data: createAgendamentos): Promise<QQferiasAgendamentos>;
    funcionariosCreate(data: createFuncionarios): Promise<QQferiasFuncionarios>;
    noticacoesCreate(data: createNotificacoes): Promise<QQferiasNotificacoes>;
    compromissosCreate(data: createCompromissos): Promise<QQferiasCompromissos>;
    agendamentosUpdate(id: number, data: updateAgendamentos): Promise<QQferiasAgendamentos>;
    funcionariosUpdate(id: number, data: updateFuncionarios): Promise<QQferiasFuncionarios>;
    compromissosUpdate(id: number, data: updateCompromissos): Promise<QQferiasCompromissos>;
    notificacoesUpdate(id: number, data: updateNotificacoes): Promise<QQferiasNotificacoes>;
    agendamentosDeleteById(id: number): Promise<void>;
    compromissosDeleteById(id: number): Promise<void>;
    funcionariosDeleteById(id: number): Promise<void>;
    notificacoesDeleteById(id: number): Promise<void>;
}
